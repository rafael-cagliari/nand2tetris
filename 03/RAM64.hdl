// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/3/a/RAM64.hdl
/**
 * Memory of sixty four 16-bit registers.
 * If load is asserted, the value of the register selected by
 * address is set to in; Otherwise, the value does not change.
 * The value of the selected register is emitted by out.
 */
CHIP RAM64 {
    IN in[16], load, address[6];
    OUT out[16];

    PARTS:
    DMux8Way(in = load, sel = address[3..5], a = ramA, b = ramB, c = ramC, d = ramD, e = ramE, f = ramF, g = ramG, h = ramH);
    RAM8(in = in, load = ramA, address = address[0..2], out = outA);
    RAM8(in = in, load = ramB, address = address[0..2], out = outB);
    RAM8(in = in, load = ramC, address = address[0..2], out = outC);
    RAM8(in = in, load = ramD, address = address[0..2], out = outD);
    RAM8(in = in, load = ramE, address = address[0..2], out = outE);
    RAM8(in = in, load = ramF, address = address[0..2], out = outF);
    RAM8(in = in, load = ramG, address = address[0..2], out = outG);
    RAM8(in = in, load = ramH, address = address[0..2], out = outH);
    Mux8Way16(a = outA, b = outB, c = outC, d = outD, e = outE, f = outF, g = outG, h = outH, sel = address[3..5], out = out);
}